name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

jobs:

  build-deploy:

    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }} # 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }} # 'my-service-account@my-project.iam.gserviceaccount.com'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev

    - name: "Connect to GKE"
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_CLUSTER_LOCATION }}

    # Build the Docker image and push it to Artifact Registry
    - name: Create image tag
      run: echo "IMAGE_TAG=${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY }}/${{ vars.FRONTEND_IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

    - name: Lock image version in deployment.yaml
      run: sed -i 's|FRONTEND_IMAGE|${{ env.IMAGE_TAG }}|g' .github/kubernetes/frontend-deployment.yaml

    - name: Build Docker image
      run: docker build --tag "${{ env.IMAGE_TAG }}"

    - name: Publish Docker image to Google Artifact Registry
      run: docker push "${{ env.IMAGE_TAG }}"

    # Deploy to GKE
    - name: Deploy to GKE
      run: kubectl apply -f .github/kubernetes/frontend-deployment.yaml
